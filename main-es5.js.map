{
  "version": 3,
  "sources": [
    "webpack:///./src/app/app.component.html",
    "webpack:///./$_lazy_route_resource lazy namespace object",
    "webpack:///./src/app/Service/api.ts",
    "webpack:///./src/app/Service/base.api.ts",
    "webpack:///./src/app/Service/service.ts",
    "webpack:///./src/app/app.component.css",
    "webpack:///./src/app/app.component.ts",
    "webpack:///./src/app/app.module.ts",
    "webpack:///./src/environments/environment.ts",
    "webpack:///./src/main.ts"
  ],
  "names": [],
  "mappings": "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",
  "file": "main-es5.js",
  "sourcesContent": [
    "module.exports = \"<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row\\\">\\n      <div class=\\\"col-12\\\">\\n          \\n      </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n      <div class=\\\"col-12\\\">\\n          <h1 [innerHTML]=\\\"cnt_Title + ' ' + cnt_SubTitle\\\"></h1>\\n      </div>\\n\\n      <div class=\\\"col-12\\\">\\n          <h2 [innerHTML]=\\\"cnt_SubTitle\\\"></h2>\\n      </div>\\n\\n      <div class=\\\"col-12\\\">\\n\\n          <div *ngFor=\\\"let group of groups\\\" class=\\\"mt-5\\\">\\n              <h4 [innerHTML]=\\\"serv.GetTextInArray(group.groupLabel, group.groupName)\\\"></h4>\\n\\n              <div *ngFor=\\\"let section of group.sections\\\" class=\\\"mt-5\\\">\\n                  <h5 [innerHTML]=\\\"serv.GetTextInArray(section.title, section.sectionName)\\\"></h5>\\n\\n                  <hr>\\n\\n                  <div class=\\\"container-fluid\\\">\\n                      <div class=\\\"row\\\">\\n                          <div *ngFor=\\\"let product of section.products\\\"\\n                              class=\\\"carousel__item col-12 col-sm-4 col-md-3 col-lg-2 m-2\\\"\\n                              style=\\\"border:1px solid gray;\\\">\\n                              <p class=\\\"text-center\\\" [innerHTML]=\\\"product.sku\\\"></p>\\n                            \\n                          </div>\\n                      </div>\\n                  </div>\\n              </div>\\n          </div>\\n      </div>\\n  </div>\\n</div>\"",
    "function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";",
    "import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { environment } from \"../../environments/environment\";\nimport { BaseApi } from \"./base.api\";\n\n@Injectable()\nexport class ApiService extends BaseApi {\n\n    GetJsonLabel()\n    {\n        var version = new Date().toLocaleString();\n        var jsonPath = 'https://it.loropiana.com/en/ck-static/assets/data/schema-contents.json?' + version;\n        return this._get(jsonPath);\n    }\n\n    GetJsonProducts()\n    {\n        var version = new Date().toLocaleString();\n        var jsonPath = 'https://it.loropiana.com/en/ck-static/assets/data/schema_products.json?' + version;\n        return this._get(jsonPath);\n    }\n\n    GetSample(id: number)\n    {\n        return this._post(environment.UrlAPI + 'controller/api',{\n            \"id\": id\n          });\n    }\n\n    PostSample(obj: any) {\n      return this._post(environment.UrlAPI + 'controller/api', obj);\n    }    \n    \n}",
    "import { Injectable } from '@angular/core';\nimport { HttpHeaders } from '@angular/common/http';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable()\nexport class BaseApi {\n\n  constructor(protected http: HttpClient) { }\n\n  private createHeader(onlyCORS: boolean = false) {\n   \n    var headersPar;\n\n    headersPar = new HttpHeaders({\n    'Content-Type': 'application/json; charset=utf-8',\n    'Access-Control-Allow-Credentials': 'true',\n    'Access-Control-Allow-Origin': '*',\n    'Access-Control-Allow-Methods': 'GET, POST, PATCH, DELETE, PUT, OPTIONS',\n    'Access-Control-Allow-Headers': 'Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With'\n    });\n\n    const options = { headers: headersPar };\n    return options;\n  \n  }\n\n  _get(url: any, auth: boolean = true) {\n    var obj: any;\n\n    if (auth) obj = this.http.get(url, this.createHeader());\n    else obj = this.http.get(url, this.createHeader(true));\n\n    return obj;\n  }\n\n  _post(url: any, data: any) {\n    var obj = this.http.post(url, data, this.createHeader());\n    return obj;\n  }\n\n  \n\n  \n}\n\n\n",
    "import { Injectable } from \"@angular/core\";\n\n\n@Injectable()\nexport class Service {\n  language: string = \"\";\n  version : string = \"\";\n  \n  constructor() {}\n\n  GetTextInJson(json, key: string) {\n    if (json[key][this.language] == undefined) return \"** \" + key + \" **\";\n    return json[key][this.language];\n  }\n\n  GetTextInArray(json, label) {\n    if (json[this.language] == undefined) return \"** \" + label + \" **\"\n    return json[this.language];\n  }\n\n  GetTextInJsonStatic(json, key: string) {\n    var values = Object.values(json);\n    if (values[0][key][this.language] == undefined) return \"** \" + key + \" **\";\n    return values[0][key][this.language];\n  }\n\n  GetTextInArrayStatic(json, label) {\n    if (json[this.language] == undefined) return \"** \" + label + \" **\";\n    return json[this.language];\n  }\n}\n",
    "module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcm9qZWN0cy9Mb3JvUGlhbmEtQ2Fwc3VsZTIwMjNGZWIyMy1UZXN0RW1wdHkvc3JjL2FwcC9hcHAuY29tcG9uZW50LmNzcyJ9 */\"",
    "import { Component } from '@angular/core';\nimport { ApiService } from './Service/api';\nimport { Service } from './Service/service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'LoroPiana-Capsule2023Feb23-TestEmpty';\n\n  products: any = undefined;\n  groups: any[] = undefined;\n\n  cnt_Title : string = \"\";\n  cnt_SubTitle : string = \"\";\n  cnt_VideoUrl : string = \"\";\n  \n  constructor(public serv: Service, public api: ApiService) { }\n\n  ngOnInit() \n  {\n    //var myLang = $(\"meta[name=kl-lang]\").attr(\"value\");\n    //if (myLang == null || myLang == '') myLang = \"en\";\n    var myLang = \"en\";\n    this.serv.language = myLang;\n    \n    this.api.GetJsonLabel().subscribe(\n      data => {\n        //Populate Labels\n        this.cnt_Title = this.serv.GetTextInJson(data, \"title1\");\n        this.cnt_SubTitle = this.serv.GetTextInJson(data, \"title2\");\n        this.cnt_VideoUrl = this.serv.GetTextInJson(data, \"videoUrl\");\n      }\n    );\n\n    this.api.GetJsonProducts().subscribe(\n      data => {\n        //Populate Data\n        this.products = data;\n        this.groups = this.products.groups;\n      }\n    );\n  }\n\n}\n",
    "import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { Service } from './Service/service';\nimport { ApiService } from './Service/api';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule\n  ],\n  providers: [Service, ApiService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n",
    "// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  UrlAPI: \"http://api.temp\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n",
    "import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"
  ],
  "sourceRoot": ""
}